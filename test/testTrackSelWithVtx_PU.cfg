# Test on a sample with real pileup from 1_2_X with ReReco
# AFAIK there are no PU samples in 1_3_X production

process Test2 = {

    include "FWCore/MessageService/data/MessageLogger.cfi"
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    include "Configuration/StandardSequences/data/FakeConditions.cff"

    source = PoolSource {
        untracked vstring fileNames = { 
            '/store/mc/2006/12/22/mc-physval-120-ZToMuMu-LowLumiPU/0029/5EB183AD-AFAF-DB11-88BC-00304875A59D.root',
            '/store/mc/2006/12/22/mc-physval-120-ZToMuMu-LowLumiPU/0029/66336943-AAAF-DB11-9ABC-003048727681.root',
            '/store/mc/2006/12/22/mc-physval-120-ZToMuMu-LowLumiPU/0029/8A23E7A6-AFAF-DB11-815E-00304875A595.root',
            '/store/mc/2006/12/22/mc-physval-120-ZToMuMu-LowLumiPU/0029/A28C1546-ACAF-DB11-9433-001731AF6873.root' 
        }
        untracked int32 maxEvents = 25
    }

    include "PhysicsTools/RecoSelectors/data/TrackWithVertexSelector.cfi"

    module out = PoolOutputModule {
        untracked string fileName = 'select-vtx.root' 
        untracked vstring outputCommands = {
                'drop *',
                'keep recoTracks_*_*_Test2',
                'keep *_offlinePrimaryVerticesFromCTFTracks_*_Test2'
        }
    }

    untracked PSet options = { untracked bool wantSummary = true }

    sequence trackVertexReco = { trackerlocalreco, ckftracks, recopixelvertexing, vertexreco }
    path    p = { trackVertexReco, trackWithVertexSelector }

    replace trackWithVertexSelector.useVtx    = true
    replace trackWithVertexSelector.nVertices = 1
    replace trackWithVertexSelector.zetaVtx   = 0.1

    endpath e = { out }
}
